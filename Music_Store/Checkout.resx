<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbArtwork.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhlgCWAIcAAACHUQCHUgCIUQCIUgCIUwKJVAOKVASJUgWKUgSJVASKVQaKVgiLUwmLVAiLVwmM
        UgmMVAiMVw2NUw2OUwyNVA6OVAiLWAiMWAuNWgyNWg6OWg+OXBGOVBCPXBKQVBSQVBeRVheSVRGQXhOR
        XxSRXxmSVRqSVhuUVRuUVhyUVR6UVhORYBWRYBWSYBqUYxuUZR2VZh6WZiCVViKWViSXVySXWCaYVieY
        WCiYVy2bVymZWCqaWCyaWC+cWTCcWDOeWTSdWTaeWTefWjifWTifWiCXaCKXaSKYaSSYaSSYaiSYayea
        bS2dcS+dci+ecjGeczegWjqgWTmgWjyhWz6iWjOgdDOgdTSgdTWgdjeheDmieDujezukejyjej2ke0Gj
        WkGkW0WlW0WlXEamXEmmW0mmXE2oXE2oXlCpXVGqXFGqXlSrXVWrXlasXVasXlitXVitXlquXlyuXl+w
        X0Gmfl+wYGGwXmKyX2SyX2GwYGKyYGWyYGe0YGmzYGi0YGy1YGy1Ym22YW+2YnC3YXC3YnK4YXS4Yna6
        Ynm6Ynu8Y328Y3++Y328ZEOngESngEWogUeogkipg0urhUyrhk6shk+siFCsiFKuilWvi1Swi1WwjFmx
        jluykF2zkV+0k2C0k2K2lWS2lWW3lma4mGi4mGu5mmy6m227nG+8nnC8nXG8nnS+oHnApH3CpoC9Y4G+
        Y4C9ZIG+ZIS/ZIXAZIjBZIrCZIrCZoHEqYHEqoXGrIfHrorIr4vJsIzJsY7KsY7KspTNtpfOuJjOuZnQ
        up3RvJ7SvZ/SvqDSvqLTwKLUwKXVwqfWw6nWxKzZx67ZyLDaybHbyrbdzbbdzrrf0Lzg0b3g0sDh1MHi
        1MPj1sTj1sbk2Mbl2cjl2crm28vn3M7o3tDp39Tr4dXr4tbs49bs5Njt5Nru5t3v6N7w6ODw6eXz7eXz
        7ub07ej07+n08Or28ez28u/49PH49fL59vP59/T69/X6+Pf7+vj8+vn8+/r8/Pz9/Pz9/fz+/f7+/v7+
        /yH/C05FVFNDQVBFMi4wAwEBAAAh+QQAAAAAACwAAAAAlgCWAAAI/wD/CRxIsKDBgwgTKlzIsKHDhxAj
        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
        +7RQG7VSO7VUW7UqGxAAOw==
</value>
  </data>
</root>